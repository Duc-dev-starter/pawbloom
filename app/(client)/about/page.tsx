import React, { CSSProperties } from 'react'

import { Metadata } from 'next';
import { Faqs, Features, HeroSections, Testimonials } from '@/sections/about';
import Marquee from '@/components/ui/marquee';
import { avatar, faqs, heroImages, reviews } from '@/constants/about';
import Image from 'next/image';
import AnimatedGradientText from '@/components/ui/animated-gradient-text';
import { cn } from '@/lib/utils';
import { ChevronRight, ImageIcon, Package2, PanelLeft } from 'lucide-react';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import Link from 'next/link';
import { FaStar } from 'react-icons/fa6';
import { Button } from '@/components/ui/button';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';

export const generateMetadata = (): Metadata => ({
    title: 'V·ªÅ ch√∫ng t√¥i',
    description: 'T√¨m hi·ªÉu th√™m v·ªÅ ch√∫ng t√¥i v√† s·ª© m·ªánh c·ªßa ch√∫ng t√¥i.',
    keywords: ['v·ªÅ ch√∫ng t√¥i', 's·ª© m·ªánh', 'nhi·ªám v·ª•'],
    openGraph: {
        title: 'V·ªÅ ch√∫ng t√¥i',
        description: 'T√¨m hi·ªÉu th√™m v·ªÅ ch√∫ng t√¥i.',
        images: '/images/about.jpg',
    },
});

const MarqueeColumn = ({
    reverse, duration, className
}: {
    reverse: boolean,
    duration: string,
    className?: string
}) => {
    return <Marquee reverse={reverse} pauseOnHover vertical className={cn("w-full relative h-full flex flex-col justify-center items-center", className)}
        style={{
            "--duration": duration
        } as CSSProperties}
    >
        {
            heroImages.sort(() => Math.random() - 0.5).map((image, index) => (
                <Image key={index} src={image.src} alt={image.alt} height={200} width={200} priority className='size-full
                  rounded object-cover opacity-[.25] transition-opacity duration-300 
                  ease-in-out hover:opacity-100'/>
            ))
        }
    </Marquee>
}

const featureList = [
    {
        title: "L√Ω do th√†nh l·∫≠p",
        description: "PawBloom ra ƒë·ªùi nh·∫±m gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ ng√†y c√†ng tƒÉng v·ªÅ th√∫ c∆∞ng b·ªã b·ªè r∆°i d·∫´n ƒë·∫øn nh·ªØng ·∫£nh h∆∞·ªüng ƒë·∫øn t√≠nh m·∫°ng c·ªßa c√°c b√© v√† kh√≥ khƒÉn trong vi·ªác k·∫øt n·ªëi nh·ªØng ng∆∞·ªùi nh·∫≠n nu√¥i v·ªõi c√°c trung t√¢m c·ª©u h·ªô. C√°ch t·∫°o ra m·ªôt n·ªÅn t·∫£ng t·∫≠p trung, gi√∫p qu√° tr√¨nh nh·∫≠n nu√¥i n√™n d·ªÖ d√†ng v√† nhanh ch√≥ng h∆°n.",
        icon: <ImageIcon className='size-6' strokeWidth={1.5} />
    },
    {
        title: "V√¨ t∆∞∆°ng lai t·ªët ƒë·∫πp cho nh·ªØng ng∆∞·ªùi b·∫°n b·ªën ch√¢n",
        description: "PawBloom ƒë∆∞·ª£c th√†nh l·∫≠p v·ªõi m·ª•c ti√™u k·∫øt n·ªëi nh·ªØng tr·∫°m c·ª©u tr·ª£ ƒë·ªông v·∫≠t v·ªõi nh·ªØng ng∆∞·ªùi c√≥ l√≤ng y√™u th∆∞∆°ng, s·∫µn s√†ng trao cho c√°c b√© m·ªôt m√°i ·∫•m m·ªõi Ch√∫ng t√¥i tin r·∫±ng m·ªói ch√∫ ch√≥, ch√∫ m√®o ƒë·ªÅu x·ª©ng ƒë√°ng c√≥ m·ªôt cu·ªôc s·ªëng t·ªët ƒë·∫πp h∆°n v√† nhi·ªám v·ª• c·ªßa ch√∫ng t√¥i l√† tr·ªü th√†nh c·∫ßu n·ªëi gi√∫p hi·ªán th·ª±c h√≥a ∆∞·ªõc m∆° ƒë√≥.",
        icon: <Package2 className='size-6' strokeWidth={1.5} />
    },
    {
        title: "S·ª© m·ªánh",
        description: "S·ª© m·ªánh c·ªßa Pawbloom l√† t·∫°o ra m·ªôt n·ªÅn t√†ng ƒë∆°n gi·∫£n v√† nh√¢n vƒÉn, k·∫øt n·ªëi th√∫ c∆∞ng c·∫ßn nh√† v·ªõi nh·ªØng ng∆∞·ªùi y√™u th∆∞∆°ng ch√∫ng. B·∫±ng c√°ch cung c·∫•p d·ªãch v·ª• to√†n di·ªán ƒë·ªÉ s·ª≠ d·ª•ng. Pawbloom mong mu·ªën gi·∫£m thi·ªÉu s·ªë l∆∞·ª£ng th√∫ c∆∞ng v√¥ gia c∆∞ v√† th√∫c ƒë·∫©y vi·ªác nu√¥i d∆∞·ª°ng th√∫ c∆∞ng c√≥ tr√°ch nhi·ªám",
        icon: <PanelLeft className='size-6' strokeWidth={1.5} />
    },
]

const firstRow = reviews.slice(0, reviews.length / 2);
const secondRow = reviews.slice(reviews.length / 2);

const ReviewCard = ({
    img,
    name,
    username,
    body,
}: {
    img: string;
    name: string;
    username: string;
    body: string;
}) => {
    return (
        <figure
            className={cn(
                "relative w-80 cursor-pointer overflow-hidden rounded-xl border p-4 sm:p-8 flex flex-col justify-between",
                // light styles
                "border-primary/[.15] bg-muted/70 hover:bg-muted/80",
            )}
        >
            <blockquote className="mt-2 text-sm">{body}</blockquote>
            <div className="mt-2 flex flex-row items-center gap-2">
                <Image className="aspect-square rounded-full" width="32" height="32" alt={username} src={img} />
                <div className="flex flex-col">
                    <figcaption className="text-sm font-medium dark:text-white">
                        {name}
                    </figcaption>
                    <p className="text-xs font-medium dark:text-white/40">{username}</p>
                </div>
            </div>
        </figure>
    );
};

const Question = ({ question, answer }: { question: string, answer: string }) => {
    return <AccordionItem value={question}>
        <AccordionTrigger className='text-left'>{question}</AccordionTrigger>
        <AccordionContent className='text-muted-foreground'>
            {answer}
        </AccordionContent>
    </AccordionItem>
}


const AboutPage = () => {
    return (
        // <div className='p-10 flex flex-col'>
        //     <div>
        //         <h2 className='h2 text-center text-brand-200'>V·ªÅ ch√∫ng t√¥i</h2>
        //         <p className='text-center text-brand-100'>Nh·ªØng con ng∆∞·ªùi ƒë√£ t·∫°o n√™n Pawbloom</p>



        //     </div>
        //     <div></div>
        // </div>

        <main className='flex min-h-screen flex-col items-center justify-center'>
            <section id='hero' className='relative flex min-h-screen w-full flex-col items-center justify-center overflow-hidden'>
                <div className='relative z-40 mx-auto flex w-fit flex-col items-center justify-center space-y-4 px-6 text-center backdrop-blur-[2px] sm:px-0'>
                    <AnimatedGradientText>
                        üéâ <hr className="mx-2 h-4 w-px shrink-0 bg-gray-300" />{" "}
                        <span
                            className={cn(
                                `inline animate-gradient bg-gradient-to-r from-[#ffaa40] via-[#9c40ff] to-[#ffaa40] bg-[length:var(--bg-size)_100%] bg-clip-text text-transparent`,
                            )}
                        >
                            C√πng kh√°m ph√° v·ªÅ ch√∫ng t√¥i
                        </span>
                        <ChevronRight className="ml-1 size-3 transition-transform duration-300 ease-in-out group-hover:translate-x-0.5" />
                    </AnimatedGradientText>
                    <h1 className='text-3xl font-extrabold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl'>C√πng kh√°m ph√° v·ªÅ ch√∫ng t√¥i</h1>
                    <p className='mx-auto mb-8 max-w-3xl text-sm text-gray-600 xs:text-base sm:text-lg md:text-xl'>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Delectus, eaque, blanditiis atque sed ut ipsum quae nulla totam, magni obcaecati aperiam voluptatum quod deserunt inventore? Asperiores impedit sunt adipisci perspiciatis?</p>
                    <div className='mb-4 flex items-center space-x-2'>
                        <div className='mb-4 flex items-center -space-x-5 overflow-hidden sm:-space-x-4'>
                            {
                                avatar.map((avatar, index) => (
                                    <Avatar key={index} className='inline-block border-2 border-background'>
                                        <AvatarImage src={avatar.src} className='h-full object-cover' />
                                        <AvatarFallback>{avatar.fallback}</AvatarFallback>
                                    </Avatar>
                                ))
                            }
                        </div>
                        <span className='text-sm font-medium'>ƒê∆∞·ª£c y√™u th√≠ch b·ªüi h∆°n 100 kh√°ch h√†ng</span>
                    </div>
                    <Link href="#">
                        <Button className='h-12 rounded-md text-base'>
                            <span><FaStar className='text-yellow-400' /></span>Nh·∫≠n nu√¥i th√∫ c∆∞ng ƒë·∫ßu ti√™n ngay <span><FaStar className='text-yellow-400' /></span>
                        </Button>
                    </Link>
                </div>
                <div className='absolute top-0 z-10 grid w-full grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6'>
                    <MarqueeColumn reverse={false} duration='120s' />
                    <MarqueeColumn reverse={true} duration='120s' />
                    <MarqueeColumn reverse={false} duration='120s' />
                    <MarqueeColumn reverse={true} duration='120s' className='hidden md:flex' />
                    <MarqueeColumn reverse={false} duration='120s' className='hidden lg:flex' />
                    <MarqueeColumn reverse={true} duration='120s' className='hiddenlg:flex' />
                </div>
            </section>

            <section id='features' className='w-full py-32 flex flex-col items-center justify-center'>
                <div className='container px-6 xs:px-8 sm:px-0 sm:mx-8 lg:mx-auto grid grid-cols-1 lg:grid-cols-2 gap-8 relative'>
                    <div className='col-span-full space-y-4'>
                        <AnimatedGradientText className='ml-0 bg-background backdrop-blur-0'>
                            <span
                                className={cn(
                                    `inline animate-gradient bg-gradient-to-r from-[#ffaa40] via-[#9c40ff] to-[#ffaa40] bg-[length:var(--bg-size)_100%] bg-clip-text text-transparent`,
                                )}
                            >
                                Introducing Magic UI
                            </span>
                            <ChevronRight className="ml-1 size-3 transition-transform duration-300 ease-in-out group-hover:translate-x-0.5" />
                        </AnimatedGradientText>
                        <h2 className='text-2xl font-bold xs:text-3xl sm:text-4xl'>Unlock unlimited possibilities</h2>
                        <p className='text-sm text-muted-foreground xs:text-base lg:max-w-[75%]'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam, iure ipsum corrupti ad deserunt voluptates sequi architecto, harum eligendi porro nulla pariatur cupiditate rem quos aliquid, facilis nemo maxime autem.</p>
                    </div>

                    <div className='order-2 flex flex-col items-start justify-start lg:order-1'>
                        {
                            featureList.map(feature => (
                                <div key={feature.title} className='flex items-start gap-2 rounded-lg py-8 sm:gap-4 lg:p-12'>
                                    <span className='rounded-md p-0 text-foreground sm:bg-foreground sm:p-2 sm:text-background'>{feature.icon}</span>
                                    <div>
                                        <h3 className='text-xl font-medium sm:text-2xl'>{feature.title}</h3>
                                        <p className='text-sm text-muted-foreground xs:text-base'>{feature.description}</p>
                                    </div>
                                </div>
                            ))
                        }
                    </div>

                    <div className={cn("h-fit lg:sticky top-32 pl-16 pt-16 rounded-lg border border-r-gray-300 border-b-gray-300 animate-gradient bg-gradient-to-r from-[#627fab] via-[#b95480] to-[#627fab] bg-[length:var(--bg-size)_100%] [--bg-size:400%] order-1 lg:order-2")}>
                        <Image src="/assets/images/homepage.png" alt='test' width={120} height={120} className='w-full h-auto rounded-tl-lg' />
                    </div>
                </div>
            </section>
            <section id='testimonials' className='flex w-full flex-col items-center justify-center overflow-hidden pt-20 pb-28'>
                <AnimatedGradientText>
                    üéâ <hr className="mx-2 h-4 w-px shrink-0 bg-gray-300" />{" "}
                    <span
                        className={cn(
                            `inline animate-gradient bg-gradient-to-r from-[#ffaa40] via-[#9c40ff] to-[#ffaa40] bg-[length:var(--bg-size)_100%] bg-clip-text text-transparent`,
                        )}
                    >
                        Ph·∫£n h·ªìi t·ª´ kh√°ch h√†ng
                    </span>
                    <ChevronRight className="ml-1 size-3 transition-transform duration-300 ease-in-out group-hover:translate-x-0.5" />
                </AnimatedGradientText>
                <h2 className='mt-4 text-2xl font-bold xs:text-3xl sm:text-4xl'>Kh√°ch h√†ng c·ªßa ch√∫ng t√¥i n√≥i g√¨</h2>
                <p className='mt-4 text-center text-base text-muted-foreground lg:max-w-[75%]'>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Illo ab, amet dignissimos id consequuntur, unde iure sed aliquid qui nobis totam fugit odio repellat harum praesentium neque ducimus provident? Officia.</p>
                <div className="relative mt-16 flex w-full flex-col items-center justify-center overflow-hidden">
                    <Marquee pauseOnHover className="[--duration:30s] [--gap:1rem] sm:[--gap:2rem]">
                        {firstRow.map((review) => (
                            <ReviewCard key={review.username} {...review} />
                        ))}
                    </Marquee>
                    <Marquee reverse pauseOnHover className="mt-1 [--duration:30s] [--gap:1rem] sm:mt-4 sm:[--gap:2rem]">
                        {secondRow.map((review) => (
                            <ReviewCard key={review.username} {...review} />
                        ))}
                    </Marquee>
                    <div className="pointer-events-none absolute inset-y-0 left-0 w-1/3 bg-gradient-to-r from-white dark:from-background sm:w-1/4"></div>
                    <div className="pointer-events-none absolute inset-y-0 right-0 w-1/3 bg-gradient-to-l from-white dark:from-background sm:w-1/4"></div>
                </div>
            </section>
            <section id='faqs' className='w-full pt-20 pb-28 px-6 xs:px-8 sm:px-0 sm:mx-8 lg:mx-auto flex flex-col items-center justify-center overflow-hidden'>
                <AnimatedGradientText>
                    üéâ <hr className="mx-2 h-4 w-px shrink-0 bg-gray-300" />{" "}
                    <span
                        className={cn(
                            `inline animate-gradient bg-gradient-to-r from-[#ffaa40] via-[#9c40ff] to-[#ffaa40] bg-[length:var(--bg-size)_100%] bg-clip-text text-transparent`,
                        )}
                    >
                        FAQS
                    </span>
                    <ChevronRight className="ml-1 size-3 transition-transform duration-300 ease-in-out group-hover:translate-x-0.5" />
                </AnimatedGradientText>
                <h2 className='mt-4 text-2xl font-bold xs:text-3xl sm:text-4xl'>Nh·ªØng c√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
                <p className='mt-4 text-center text-base text-muted-foreground lg:max-w-[75%]'>ƒê√¢y l√† 1 s·ªë c√¢u h·ªèi m√† ch√∫ng t√¥i th∆∞·ªùng g·∫∑p</p>

                <Accordion type='single' collapsible className='w-full max-w-4xl mx-auto mt-16'>
                    {
                        faqs.map((faq) => (
                            <Question key={faq.question} {...faq} />
                        ))
                    }
                </Accordion>
            </section>
        </main>
    )
}
export default AboutPage